
package guis;
import java.awt.Toolkit;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import users.*;
import system.*;



public class AdminFunctions extends javax.swing.JFrame {


    public AdminFunctions() {
        initComponents();
        getUserInfo();
        getDoctors();
        setFeedbackRequests();
        
        SetIcon();
    }
    
    private void SetIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("Syringe.png")));
    }
    
    private void getUserInfo()
    {
        Notification notification = User.loggedUser.getNotification();
        
        if(notification != null)
        {
            JOptionPane.showMessageDialog(this, notification.getMessage(), "Welcome", 
                    JOptionPane.INFORMATION_MESSAGE);
            User.loggedUser.setNotification(null);
            User.saveUsers();
        }
        
        this.txtUserAccountType.setText("Admin");
        this.txtUserID.setText(User.loggedUser.getID());
        this.txtUserName.setText(User.loggedUser.getForename() + " " + User.loggedUser.getSurname());
        this.txtUserAddress.setText(User.loggedUser.getAddress());
    }
    
    private void setFeedbackRequests()
    {
        DefaultTableModel model = (DefaultTableModel) this.tblNewFeedback.getModel();
        
        int rowCount = model.getRowCount();
        if(rowCount > 0)
        {
            for (int i = rowCount - 1; i >= 0; i--) 
            {
                model.removeRow(i);
            }
        }
        
        for(FeedbackRequest feedbackRequest : FeedbackRequest.feedbackRequests)
        {
            Doctor doctor = feedbackRequest.getDoctor();
            
            String[] data = {
                doctor.getForename() + " " + doctor.getSurname(),
                Double.toString(feedbackRequest.getRating()),
                feedbackRequest.getNotes()
            };
            
            model.addRow(data);
        }
    }
    
    private void getDoctors()
    {
        String[] doctors = new String[Doctor.doctors.length + 1];
        doctors[0] = "Select Doctor";
        int i = 1;
        
        for(Doctor doctor : Doctor.doctors)
        {
            String name = doctor.getForename() + " " + doctor.getSurname();
            
            doctors[i] = name;
            i++;
        }
        
        DefaultComboBoxModel model = new DefaultComboBoxModel(doctors);
        this.cmbSelectDoctor.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblMain = new java.awt.Label();
        menuAdmin = new javax.swing.JTabbedPane();
        tabUserInfo = new javax.swing.JPanel();
        lblUserInfo1 = new javax.swing.JLabel();
        lblAccountType1 = new javax.swing.JLabel();
        txtUserAccountType = new javax.swing.JTextField();
        lblUserID1 = new javax.swing.JLabel();
        txtUserID = new javax.swing.JTextField();
        lblUserName1 = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        lblUserName2 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        txtUserAddress = new javax.swing.JTextArea();
        tabCreateAdminAccount = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        btnAddAdmin = new javax.swing.JButton();
        lblUserInfo2 = new javax.swing.JLabel();
        lblNewForename = new javax.swing.JLabel();
        txtNewForename = new javax.swing.JTextField();
        lblNewSurname = new javax.swing.JLabel();
        txtNewSurname = new javax.swing.JTextField();
        lblNewAddress = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtNewAddress = new javax.swing.JTextArea();
        tabAddDoctors_Secretarys = new javax.swing.JPanel();
        lblCreateAdmin1 = new javax.swing.JLabel();
        lblType = new javax.swing.JLabel();
        cmbAccountType = new javax.swing.JComboBox<>();
        lblNewUserForename = new javax.swing.JLabel();
        txtNewUserForename = new javax.swing.JTextField();
        lblNewUserSurname = new javax.swing.JLabel();
        txtNewUserSurname = new javax.swing.JTextField();
        lblNewUserAddress = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtNewUserAddress = new javax.swing.JTextArea();
        btnAddAccount = new javax.swing.JButton();
        tabDoctorsRatings = new javax.swing.JPanel();
        lblViewAppointment5 = new javax.swing.JLabel();
        lblViewAppointment3 = new javax.swing.JLabel();
        cmbSelectDoctor = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblDoctorFeedback = new javax.swing.JTable();
        lblDoctorName = new javax.swing.JLabel();
        txtDoctorName = new javax.swing.JTextField();
        lblOverallRating = new javax.swing.JLabel();
        txtDoctorRating = new javax.swing.JTextField();
        lblFeedback = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtFeedback = new javax.swing.JTextArea();
        tabAddFeedback = new javax.swing.JPanel();
        jPanel28 = new javax.swing.JPanel();
        lblAddDoctorFeedback = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblNewFeedback = new javax.swing.JTable();
        lblNewFeedback = new javax.swing.JLabel();
        jPanel25 = new javax.swing.JPanel();
        lblDoctor = new javax.swing.JLabel();
        txtDoctor = new javax.swing.JTextField();
        lblRating = new javax.swing.JLabel();
        txtRating = new javax.swing.JTextField();
        lblPastNote = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        txtFeedbackNote = new javax.swing.JTextArea();
        btnApprove = new javax.swing.JButton();
        btnLogout = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Admin");

        lblMain.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblMain.setName(""); // NOI18N
        lblMain.setText("Patient Management System");

        menuAdmin.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        lblUserInfo1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblUserInfo1.setText("Account Details");

        lblAccountType1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblAccountType1.setText("Account Type:");

        txtUserAccountType.setEditable(false);
        txtUserAccountType.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N

        lblUserID1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblUserID1.setText("User ID:");

        txtUserID.setEditable(false);
        txtUserID.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N

        lblUserName1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblUserName1.setText("User Name:");

        txtUserName.setEditable(false);
        txtUserName.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N

        lblUserName2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblUserName2.setText("Address:");

        txtUserAddress.setEditable(false);
        txtUserAddress.setColumns(20);
        txtUserAddress.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        txtUserAddress.setRows(5);
        jScrollPane8.setViewportView(txtUserAddress);

        javax.swing.GroupLayout tabUserInfoLayout = new javax.swing.GroupLayout(tabUserInfo);
        tabUserInfo.setLayout(tabUserInfoLayout);
        tabUserInfoLayout.setHorizontalGroup(
            tabUserInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabUserInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabUserInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabUserInfoLayout.createSequentialGroup()
                        .addComponent(lblAccountType1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtUserAccountType))
                    .addGroup(tabUserInfoLayout.createSequentialGroup()
                        .addComponent(lblUserID1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtUserID))
                    .addGroup(tabUserInfoLayout.createSequentialGroup()
                        .addComponent(lblUserName1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtUserName))
                    .addGroup(tabUserInfoLayout.createSequentialGroup()
                        .addComponent(lblUserInfo1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(tabUserInfoLayout.createSequentialGroup()
                        .addComponent(lblUserName2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 967, Short.MAX_VALUE)))
                .addContainerGap())
        );
        tabUserInfoLayout.setVerticalGroup(
            tabUserInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabUserInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblUserInfo1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabUserInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAccountType1)
                    .addComponent(txtUserAccountType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabUserInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUserID1)
                    .addComponent(txtUserID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabUserInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUserName1)
                    .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabUserInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblUserName2)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(384, Short.MAX_VALUE))
        );

        menuAdmin.addTab("Account Details", tabUserInfo);

        btnAddAdmin.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAddAdmin.setText("Create Account");
        btnAddAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddAdminActionPerformed(evt);
            }
        });

        lblUserInfo2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblUserInfo2.setText("Create Admin Account");

        lblNewForename.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblNewForename.setText("Name:");

        txtNewForename.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N

        lblNewSurname.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblNewSurname.setText("Surname:");

        txtNewSurname.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N

        lblNewAddress.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblNewAddress.setText("Address:");

        txtNewAddress.setColumns(20);
        txtNewAddress.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        txtNewAddress.setRows(5);
        jScrollPane1.setViewportView(txtNewAddress);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnAddAdmin))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(lblNewAddress)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(lblNewForename)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNewForename))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(lblNewSurname)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNewSurname, javax.swing.GroupLayout.DEFAULT_SIZE, 938, Short.MAX_VALUE)))
                        .addGap(14, 14, 14))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblUserInfo2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblUserInfo2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNewForename, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNewForename, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtNewSurname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNewSurname, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblNewAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAddAdmin)
                .addContainerGap(336, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout tabCreateAdminAccountLayout = new javax.swing.GroupLayout(tabCreateAdminAccount);
        tabCreateAdminAccount.setLayout(tabCreateAdminAccountLayout);
        tabCreateAdminAccountLayout.setHorizontalGroup(
            tabCreateAdminAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabCreateAdminAccountLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        tabCreateAdminAccountLayout.setVerticalGroup(
            tabCreateAdminAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabCreateAdminAccountLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        menuAdmin.addTab("Create Admin Account", tabCreateAdminAccount);

        lblCreateAdmin1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblCreateAdmin1.setText("Add Doctor/Secretarys");

        lblType.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblType.setText("Type:");

        cmbAccountType.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cmbAccountType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Doctor", "Secretary" }));
        cmbAccountType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbAccountTypeActionPerformed(evt);
            }
        });

        lblNewUserForename.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblNewUserForename.setText("Forename:");

        txtNewUserForename.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N

        lblNewUserSurname.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblNewUserSurname.setText("Surname:");

        txtNewUserSurname.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N

        lblNewUserAddress.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblNewUserAddress.setText("Address:");

        txtNewUserAddress.setColumns(20);
        txtNewUserAddress.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        txtNewUserAddress.setRows(5);
        jScrollPane2.setViewportView(txtNewUserAddress);

        btnAddAccount.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAddAccount.setText("Add Account");
        btnAddAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddAccountActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tabAddDoctors_SecretarysLayout = new javax.swing.GroupLayout(tabAddDoctors_Secretarys);
        tabAddDoctors_Secretarys.setLayout(tabAddDoctors_SecretarysLayout);
        tabAddDoctors_SecretarysLayout.setHorizontalGroup(
            tabAddDoctors_SecretarysLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabAddDoctors_SecretarysLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabAddDoctors_SecretarysLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabAddDoctors_SecretarysLayout.createSequentialGroup()
                        .addComponent(lblType)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbAccountType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(tabAddDoctors_SecretarysLayout.createSequentialGroup()
                        .addComponent(lblNewUserForename)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNewUserForename))
                    .addGroup(tabAddDoctors_SecretarysLayout.createSequentialGroup()
                        .addComponent(lblNewUserSurname)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNewUserSurname))
                    .addGroup(tabAddDoctors_SecretarysLayout.createSequentialGroup()
                        .addComponent(lblCreateAdmin1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(tabAddDoctors_SecretarysLayout.createSequentialGroup()
                        .addComponent(lblNewUserAddress)
                        .addGap(30, 30, 30)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 941, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabAddDoctors_SecretarysLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAddAccount)))
                .addContainerGap())
        );
        tabAddDoctors_SecretarysLayout.setVerticalGroup(
            tabAddDoctors_SecretarysLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabAddDoctors_SecretarysLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCreateAdmin1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabAddDoctors_SecretarysLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblType)
                    .addComponent(cmbAccountType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabAddDoctors_SecretarysLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNewUserForename, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNewUserForename, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(tabAddDoctors_SecretarysLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNewUserSurname, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNewUserSurname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabAddDoctors_SecretarysLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNewUserAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAddAccount)
                .addContainerGap(343, Short.MAX_VALUE))
        );

        menuAdmin.addTab("Add Doctors/Secretarys", tabAddDoctors_Secretarys);

        lblViewAppointment5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblViewAppointment5.setText("View Doctor Ratings");

        lblViewAppointment3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblViewAppointment3.setText("Select Doctor:");

        cmbSelectDoctor.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cmbSelectDoctor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbSelectDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSelectDoctorActionPerformed(evt);
            }
        });

        tblDoctorFeedback.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        tblDoctorFeedback.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Rating", "Feedback"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDoctorFeedback.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDoctorFeedbackMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblDoctorFeedback);
        if (tblDoctorFeedback.getColumnModel().getColumnCount() > 0) {
            tblDoctorFeedback.getColumnModel().getColumn(0).setResizable(false);
            tblDoctorFeedback.getColumnModel().getColumn(1).setResizable(false);
        }

        lblDoctorName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblDoctorName.setText("Doctor:");

        txtDoctorName.setEditable(false);
        txtDoctorName.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N

        lblOverallRating.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblOverallRating.setText("Overall Rating");

        txtDoctorRating.setEditable(false);
        txtDoctorRating.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N

        lblFeedback.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblFeedback.setText("Feedback:");

        txtFeedback.setColumns(20);
        txtFeedback.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        txtFeedback.setLineWrap(true);
        txtFeedback.setRows(5);
        jScrollPane5.setViewportView(txtFeedback);

        javax.swing.GroupLayout tabDoctorsRatingsLayout = new javax.swing.GroupLayout(tabDoctorsRatings);
        tabDoctorsRatings.setLayout(tabDoctorsRatingsLayout);
        tabDoctorsRatingsLayout.setHorizontalGroup(
            tabDoctorsRatingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabDoctorsRatingsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabDoctorsRatingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1018, Short.MAX_VALUE)
                    .addGroup(tabDoctorsRatingsLayout.createSequentialGroup()
                        .addComponent(lblFeedback)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5))
                    .addGroup(tabDoctorsRatingsLayout.createSequentialGroup()
                        .addComponent(lblDoctorName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDoctorName))
                    .addGroup(tabDoctorsRatingsLayout.createSequentialGroup()
                        .addComponent(lblViewAppointment5)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(tabDoctorsRatingsLayout.createSequentialGroup()
                        .addComponent(lblOverallRating)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDoctorRating))
                    .addGroup(tabDoctorsRatingsLayout.createSequentialGroup()
                        .addComponent(lblViewAppointment3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbSelectDoctor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        tabDoctorsRatingsLayout.setVerticalGroup(
            tabDoctorsRatingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabDoctorsRatingsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblViewAppointment5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabDoctorsRatingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblViewAppointment3)
                    .addComponent(cmbSelectDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabDoctorsRatingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDoctorName)
                    .addComponent(txtDoctorName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabDoctorsRatingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblOverallRating)
                    .addComponent(txtDoctorRating, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabDoctorsRatingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFeedback)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        menuAdmin.addTab("Doctor Ratings/Feedback", tabDoctorsRatings);

        jPanel28.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblAddDoctorFeedback.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblAddDoctorFeedback.setText("Add Doctor Feedback");

        tblNewFeedback.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        tblNewFeedback.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Doctor", "Rating", "Feedback"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblNewFeedback.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNewFeedbackMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblNewFeedback);
        if (tblNewFeedback.getColumnModel().getColumnCount() > 0) {
            tblNewFeedback.getColumnModel().getColumn(1).setResizable(false);
            tblNewFeedback.getColumnModel().getColumn(2).setPreferredWidth(100);
        }

        lblNewFeedback.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        lblNewFeedback.setText("New Feedback:");

        jPanel25.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblDoctor.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblDoctor.setText("Doctor:");

        txtDoctor.setEditable(false);
        txtDoctor.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N

        lblRating.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblRating.setText("Rating:");

        txtRating.setEditable(false);
        txtRating.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N

        lblPastNote.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblPastNote.setText("Note:");

        txtFeedbackNote.setEditable(false);
        txtFeedbackNote.setColumns(20);
        txtFeedbackNote.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        txtFeedbackNote.setLineWrap(true);
        txtFeedbackNote.setRows(5);
        jScrollPane6.setViewportView(txtFeedbackNote);

        btnApprove.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        btnApprove.setText("Approve");
        btnApprove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApproveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel25Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblPastNote)
                        .addGap(12, 12, 12))
                    .addGroup(jPanel25Layout.createSequentialGroup()
                        .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel25Layout.createSequentialGroup()
                                .addGap(140, 140, 140)
                                .addComponent(btnApprove))
                            .addGroup(jPanel25Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel25Layout.createSequentialGroup()
                                        .addComponent(lblRating)
                                        .addGap(20, 20, 20)
                                        .addComponent(txtRating, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel25Layout.createSequentialGroup()
                                        .addComponent(lblDoctor)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)))
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 545, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel25Layout.createSequentialGroup()
                        .addComponent(lblPastNote)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDoctor))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblRating)
                            .addComponent(txtRating, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnApprove))
                    .addComponent(jScrollPane6))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel28Layout = new javax.swing.GroupLayout(jPanel28);
        jPanel28.setLayout(jPanel28Layout);
        jPanel28Layout.setHorizontalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel28Layout.createSequentialGroup()
                        .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel28Layout.createSequentialGroup()
                                .addGap(407, 407, 407)
                                .addComponent(lblAddDoctorFeedback))
                            .addGroup(jPanel28Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lblNewFeedback)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel28Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4)
                            .addComponent(jPanel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel28Layout.setVerticalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel28Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblAddDoctorFeedback)
                .addGap(3, 3, 3)
                .addComponent(lblNewFeedback)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout tabAddFeedbackLayout = new javax.swing.GroupLayout(tabAddFeedback);
        tabAddFeedback.setLayout(tabAddFeedbackLayout);
        tabAddFeedbackLayout.setHorizontalGroup(
            tabAddFeedbackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabAddFeedbackLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        tabAddFeedbackLayout.setVerticalGroup(
            tabAddFeedbackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabAddFeedbackLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        menuAdmin.addTab("Add Feedback", tabAddFeedback);

        btnLogout.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnLogout.setText("Log Out");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(menuAdmin)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnLogout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(menuAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 648, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddAccountActionPerformed
        String userID = "";
        String forename = this.txtNewUserForename.getText();
        String surname = this.txtNewUserSurname.getText();
        String address = this.txtNewUserAddress.getText();
        
        String userType = (String) this.cmbAccountType.getSelectedItem();
        
        if((forename.equals("")) || (surname.equals("")) || (address.equals("")))
        {
            JOptionPane.showMessageDialog(this, "Fill in all fields", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            if(userType.equals("Doctor"))
            {
                userID = String.format("D%03d", Doctor.doctors.length + 1);
                Doctor newDoctor = new Doctor(userID, "5f4dcc3b5aa765d61d8327deb882cf99", forename, surname, address,
                    new Notification("Welcome to your new Doctor Account"));
                newDoctor.addDoctor(newDoctor);
            }
            else if(userType.equals("Secretary"))
            {
                userID = String.format("S%03d", Secretary.secretarys.length + 1);
                Secretary newSecretary = new Secretary(userID, "5f4dcc3b5aa765d61d8327deb882cf99", forename, surname, address, 
                    new Notification("Welcome to your new Secretary Account"));
                newSecretary.addSecretary(newSecretary);
            }
            
            JOptionPane.showMessageDialog(this, "User added", "SUCCESS", JOptionPane.INFORMATION_MESSAGE);
            
            this.txtNewUserForename.setText("");
            this.txtNewUserSurname.setText("");
            this.txtNewUserAddress.setText("");
        }
    }//GEN-LAST:event_btnAddAccountActionPerformed

    private void cmbAccountTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbAccountTypeActionPerformed
        String selection = (String) this.cmbAccountType.getSelectedItem();
        
        if(selection == "Doctor")
        {
            //this.lblAccountLetter.setText("D");
        }
        else if(selection == "Secretary")
        {
            //this.lblAccountLetter.setText("S");
        }
    }//GEN-LAST:event_cmbAccountTypeActionPerformed

    private void tblNewFeedbackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNewFeedbackMouseClicked
        int row = 0;
        String[] data = new String[3];
        for(int i = 0; i < 3; i++)
        {
            row = this.tblNewFeedback.getSelectedRow();
            String value = tblNewFeedback.getModel().getValueAt(row, i).toString();
            data[i] = value;
        }
        this.txtDoctor.setText(data[0]);
        this.txtRating.setText(data[1]);
        this.txtFeedbackNote.setText(data[2]);
    }//GEN-LAST:event_tblNewFeedbackMouseClicked

    private void btnApproveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApproveActionPerformed
        String doctorName = this.txtDoctor.getText();
        double rating = Double.parseDouble(this.txtRating.getText());
        String note = this.txtFeedbackNote.getText();
        
        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure?", "WARNING",
                JOptionPane.INFORMATION_MESSAGE);
        
        if(confirm == 0)
        {
            for(Doctor doctor : Doctor.doctors)
            {
                if((doctor.getForename() + " " + doctor.getSurname()).equals(doctorName))
                {
                    Feedback newFeedback = new Feedback(doctor, rating, note);
                    newFeedback.addFeedback(newFeedback);
                    
                    for(FeedbackRequest feedbackRequest : FeedbackRequest.feedbackRequests)
                    {
                        Doctor requestDoctor = feedbackRequest.getDoctor();
                        String requestName = requestDoctor.getForename() + " " + requestDoctor.getSurname();
                        double requestRating = feedbackRequest.getRating();
                        String requestNotes = feedbackRequest.getNotes();
                        
                        if((requestName.equals(doctorName)) && (requestRating == rating) && (requestNotes.equals(note)))
                        {
                            feedbackRequest.removeFeedbackRequest(feedbackRequest);
                            break;
                        }
                    }
                    
                    setFeedbackRequests();
                    this.txtDoctor.setText("");
                    this.txtRating.setText("");
                    this.txtFeedbackNote.setText("");
                    break;
                }
            }
        }
    }//GEN-LAST:event_btnApproveActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        int confirm = JOptionPane.showConfirmDialog(this, "Are You Sure", "Confirmation", JOptionPane.WARNING_MESSAGE);

        if(confirm == 0)
        {
            User.loggedUser = null;

            User.saveUsers();

            new Login().setVisible(true);

            this.setVisible(false);
        }
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void cmbSelectDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSelectDoctorActionPerformed
        String doctorName = (String) this.cmbSelectDoctor.getSelectedItem();
        DefaultTableModel model = (DefaultTableModel) this.tblDoctorFeedback.getModel();
        this.txtDoctorName.setText("");
        this.txtDoctorRating.setText("");
        this.txtFeedback.setText("");
        
        int rowCount = model.getRowCount();
        if(rowCount > 0)
        {
            for (int i = rowCount - 1; i >= 0; i--) 
            {
                model.removeRow(i);
            }
        }
        
        for(Doctor doctor : Doctor.doctors)
        {
            String forename = doctor.getForename();
            String surname = doctor.getSurname();
            
            if((forename + " " + surname).equals(doctorName))
            {
                double totalRating = 0;
                double numFeedback = 0;
                double overallRating = 0;
                
                for(Feedback feedback : Feedback.feedback)
                {
                    if(feedback.getDoctor().getID().equals(doctor.getID()))
                    {
                        String[] data = {
                            Double.toString(feedback.getRating()),
                            feedback.getNotes()
                        };
                        totalRating += feedback.getRating();
                        numFeedback++;
                        model.addRow(data);
                    }
                }
                
                overallRating = totalRating / numFeedback;
                this.txtDoctorName.setText(doctorName);
                
                if(Double.toString(overallRating).equals("NaN"))
                {
                    this.txtDoctorRating.setText("0.0");
                }
                else
                {
                    this.txtDoctorRating.setText(Double.toString(overallRating));
                }
                break;
            }
        }
    }//GEN-LAST:event_cmbSelectDoctorActionPerformed

    private void tblDoctorFeedbackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDoctorFeedbackMouseClicked
        int row = 0;
        String[] data = new String[2];
        for(int i = 0; i < data.length; i++)
        {
            row = this.tblDoctorFeedback.getSelectedRow();
            String value = this.tblDoctorFeedback.getModel().getValueAt(row, i).toString();
            data[i] = value;
        }
        this.txtFeedback.setText(data[1]);
    }//GEN-LAST:event_tblDoctorFeedbackMouseClicked

    private void btnAddAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddAdminActionPerformed
        String forename = this.txtNewForename.getText();
        String surname = this.txtNewSurname.getText();
        String address = this.txtNewAddress.getText();
        String userID = String.format("A%03d", Admin.admins.length + 1);

        if((forename.equals("")) || (surname.equals("")) || (address.equals(""))){
            JOptionPane.showMessageDialog(this, "Please enter all information", "ERROR", JOptionPane.ERROR_MESSAGE);
        } else {
            int confirm = JOptionPane.showConfirmDialog(this, "Are you sure?", "WARNING",
                JOptionPane.INFORMATION_MESSAGE);

            if(confirm == 0) {
                Admin newAdmin = new Admin(userID, "5f4dcc3b5aa765d61d8327deb882cf99", forename, surname, address,
                    new Notification("Welcome to your new Admin Account"));
                System.out.println(userID);
                newAdmin.addAdmin(newAdmin);
 
                JOptionPane.showMessageDialog(this, "Admin added", "SUCCESS", JOptionPane.INFORMATION_MESSAGE);

                this.txtNewForename.setText("");
                this.txtNewSurname.setText("");
                this.txtNewAddress.setText("");
            }
        }
    }//GEN-LAST:event_btnAddAdminActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminFunctions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminFunctions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminFunctions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminFunctions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminFunctions().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddAccount;
    private javax.swing.JButton btnAddAdmin;
    private javax.swing.JButton btnApprove;
    private javax.swing.JButton btnLogout;
    private javax.swing.JComboBox<String> cmbAccountType;
    private javax.swing.JComboBox<String> cmbSelectDoctor;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JLabel lblAccountType1;
    private javax.swing.JLabel lblAddDoctorFeedback;
    private javax.swing.JLabel lblCreateAdmin1;
    private javax.swing.JLabel lblDoctor;
    private javax.swing.JLabel lblDoctorName;
    private javax.swing.JLabel lblFeedback;
    private java.awt.Label lblMain;
    private javax.swing.JLabel lblNewAddress;
    private javax.swing.JLabel lblNewFeedback;
    private javax.swing.JLabel lblNewForename;
    private javax.swing.JLabel lblNewSurname;
    private javax.swing.JLabel lblNewUserAddress;
    private javax.swing.JLabel lblNewUserForename;
    private javax.swing.JLabel lblNewUserSurname;
    private javax.swing.JLabel lblOverallRating;
    private javax.swing.JLabel lblPastNote;
    private javax.swing.JLabel lblRating;
    private javax.swing.JLabel lblType;
    private javax.swing.JLabel lblUserID1;
    private javax.swing.JLabel lblUserInfo1;
    private javax.swing.JLabel lblUserInfo2;
    private javax.swing.JLabel lblUserName1;
    private javax.swing.JLabel lblUserName2;
    private javax.swing.JLabel lblViewAppointment3;
    private javax.swing.JLabel lblViewAppointment5;
    private javax.swing.JTabbedPane menuAdmin;
    private javax.swing.JPanel tabAddDoctors_Secretarys;
    private javax.swing.JPanel tabAddFeedback;
    private javax.swing.JPanel tabCreateAdminAccount;
    private javax.swing.JPanel tabDoctorsRatings;
    private javax.swing.JPanel tabUserInfo;
    private javax.swing.JTable tblDoctorFeedback;
    private javax.swing.JTable tblNewFeedback;
    private javax.swing.JTextField txtDoctor;
    private javax.swing.JTextField txtDoctorName;
    private javax.swing.JTextField txtDoctorRating;
    private javax.swing.JTextArea txtFeedback;
    private javax.swing.JTextArea txtFeedbackNote;
    private javax.swing.JTextArea txtNewAddress;
    private javax.swing.JTextField txtNewForename;
    private javax.swing.JTextField txtNewSurname;
    private javax.swing.JTextArea txtNewUserAddress;
    private javax.swing.JTextField txtNewUserForename;
    private javax.swing.JTextField txtNewUserSurname;
    private javax.swing.JTextField txtRating;
    private javax.swing.JTextField txtUserAccountType;
    private javax.swing.JTextArea txtUserAddress;
    private javax.swing.JTextField txtUserID;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables
}
